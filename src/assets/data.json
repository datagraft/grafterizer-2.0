{
  "customFunctionDeclarations": [{
    "name": "add-filename-to-column",
    "clojureCode": "(defn add-filename-to-column [ds destination-column] (let [fname (:grafter.tabular/data-source (meta ds))] (add-column ds destination-column fname)))",
    "group": "SERVICE",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "boolean",
    "clojureCode": "",
    "group": "CONVERT DATATYPE",
    "docstring": "Coerce to boolean",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "capitalize",
    "clojureCode": "",
    "group": "STRING",
    "docstring": "Converts first character of the string to upper-case, all other characters to lower-case.",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "cast",
    "clojureCode": "",
    "group": "CONVERT DATATYPE",
    "docstring": " Throws a ClassCastException if x is not a c, else returns x",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "count",
    "clojureCode": "",
    "group": "COLLECTION",
    "docstring": "Returns the number of items in the collection",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "dec",
    "clojureCode": "",
    "group": "NUMBER",
    "docstring": "Returns a number one less than num",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "double",
    "clojureCode": "",
    "group": "CONVERT DATATYPE",
    "docstring": "Coerce to double",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "double-literal",
    "clojureCode": "(defn double-literal [s] (Double/parseDouble s))",
    "group": "CONVERT DATATYPE",
    "docstring": "Coerce to integer",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "fill-when",
    "clojureCode": "(defn fill-when [col] (grafter.sequences/fill-when col))",
    "group": "SERVICE",
    "docstring": "Takes a sequence of values and copies a value through the sequence depending on the supplied predicate function",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "first",
    "clojureCode": "",
    "group": "COLLECTION",
    "docstring": "Returns the first item in the collection",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "float",
    "clojureCode": "",
    "group": "CONVERT DATATYPE",
    "docstring": "Coerce to float",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "inc",
    "clojureCode": "",
    "group": "NUMBER",
    "docstring": "Returns a number one greater than num",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "integer-literal",
    "clojureCode": "(defn integer-literal [s] (Integer/parseInt s))",
    "group": "CONVERT DATATYPE",
    "docstring": "Coerce to integer",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "join",
    "clojureCode": "(defn join [& strings] (clojure.string/join \" \" strings))",
    "group": "STRING",
    "docstring": "Returns a string of all elements in the collection separated by space.",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "keyword",
    "clojureCode": "",
    "group": "CONVERT DATATYPE",
    "docstring": "Returns a Keyword with the given namespace and name. ",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "last",
    "clojureCode": "",
    "group": "COLLECTION",
    "docstring": "Return the last item in the collection",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "long",
    "clojureCode": "",
    "group": "CONVERT DATATYPE",
    "docstring": "Coerce to long",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "lower-case",
    "clojureCode": "",
    "group": "STRING",
    "docstring": "Converts string to all lower-case",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "name",
    "clojureCode": "",
    "group": "CONVERT DATATYPE",
    "docstring": "Returns the name String of a string, symbol or keyword",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "organize-date",
    "clojureCode": "(defn organize-date \"Transform date dd/mm/yyyy ~> yyyy-mm-dd\" [date] (when (seq date)  (let [[d m y] (clojure.string/split date  (read-string \"#\\\"/\\\"\"))]  (apply str (interpose \"-\" [y m d])))))",
    "group": "DATE FUNCTIONS",
    "docstring": "Transform date dd/mm/yyyy ~> yyyy-mm-dd",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "rem",
    "clojureCode": "",
    "group": "NUMBER",
    "docstring": "Returns remainder of dividing numerator by denominator",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "remove-blanks",
    "clojureCode": "(defn remove-blanks [s]  (when (seq s)  (clojure.string/replace s \" \" \"\")))",
    "group": "STRING",
    "docstring": "Removes blanks in a string",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "remove-columns",
    "clojureCode": "(defn remove-columns [ds cols] (columns ds (remove (fn [item] (some (fn [a] (= item a)) cols )) (column-names ds)))) ",
    "group": "SERVICE",
    "docstring": "Given a dataset and collection of column names narrows dataset to all but specified columns",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "replace-varible-string",
    "clojureCode": "(defn replace-varible-string [cell]   (-> cell  (clojure.string/replace (read-string \"#\\\".* #\\\"\") \"number\") (clojure.string/replace (read-string \"#\\\"[0-9]{4} \\\"\") \"\") ))",
    "group": "SERVICE",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "reverse",
    "clojureCode": "",
    "group": "STRING",
    "docstring": "Returns given string with its characters reversed",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "second",
    "clojureCode": "",
    "group": "COLLECTION",
    "docstring": "Returns the second item in the collection",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "short",
    "clojureCode": "",
    "group": "CONVERT DATATYPE",
    "docstring": "Coerce to short",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "sort-dataset",
    "clojureCode": "(defn sort-dataset  [ds col] (-> (make-dataset (sort-by col (:rows ds)) (column-names ds)) (with-meta (meta ds))))",
    "group": "SERVICE",
    "docstring": "Sorts a dataset by given column",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "string-as-keyword",
    "clojureCode": "(defn string-as-keyword [s] ( when (seq s) (->   (str s) clojure.string/trim   (clojure.string/replace \"(\" \"-\") (clojure.string/replace \")\" \"\") (clojure.string/replace \" \" \"_\") (clojure.string/replace \",\" \"-\") (clojure.string/replace \".\" \"\") (clojure.string/replace \"/\" \"-\") (clojure.string/replace \"---\" \"-\") (clojure.string/replace \"--\" \"-\") (clojure.string/replace \":\" \"\") (clojure.string/replace \"\\\"\" \"\") )))",
    "group": "STRING",
    "docstring": "Removes blanks and special symbols from a string thus making it possible to use it as a keyword",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "string-literal",
    "clojureCode": "(def string-literal s)",
    "group": "CONVERT DATATYPE",
    "docstring": "Coerce to string",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "stringToNumeric",
    "clojureCode": "(defn stringToNumeric    [x] (if (= \"\" x) nil  (if (.contains x \".\") (Double/parseDouble x)(Integer/parseInt x))))",
    "group": "CONVERT DATATYPE",
    "docstring": "Convert string to numeric",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "titleize",
    "clojureCode": "(defn titleize [st] (when (seq st) (let [a (clojure.string/split st (read-string \"#\\\" \\\"\")) c (map clojure.string/capitalize a)]  (->> c (interpose \" \") (apply str) trim))))",
    "group": "STRING",
    "docstring": "Capitalizes each word in a string",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "transform-gender",
    "clojureCode": "(def transform-gender {\"f\" (s \"female\") \"m\" (s \"male\")})",
    "group": "UTILITY",
    "docstring": "f",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "trim",
    "clojureCode": "",
    "group": "STRING",
    "docstring": "Removes whitespace from both ends of string",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "trim-newline",
    "clojureCode": "",
    "group": "STRING",
    "docstring": "Removes all trailing newline \n or return \r characters from string",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "triml",
    "clojureCode": "",
    "group": "STRING",
    "docstring": "Removes whitespace from the left side of string",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "trimr",
    "clojureCode": "",
    "group": "STRING",
    "docstring": "Removes whitespace from the right side of string",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "upper-case",
    "clojureCode": "",
    "group": "STRING",
    "docstring": "Converts string to all upper-case",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "empty?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if given collection has no items",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "every?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if first argument predicate is logical true for every x in collection, else false",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "false?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if given value is the value false, false otherwise",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "float?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if given value is a floating point number",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "keyword?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Return true if given argument is a Keyword",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "neg?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if argument is less than zero, else false",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "nil?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if argument is nil, false otherwise",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "number?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if argument is a Number",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "odd?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if argument is odd, throws an exception if it is not an integer",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "pos?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if argument is greater than zero, else false",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "ratio?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if argument is a Ratio",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "rational?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if argument is a rational number",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "string?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Return true if argument is a String",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "true?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if argument is the value true, false otherwise",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "zero?",
    "clojureCode": "",
    "group": "PREDICATE",
    "docstring": "Returns true if argument is zero, else false",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "+",
    "clojureCode": "",
    "group": "NUMBER",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "-",
    "clojureCode": "",
    "group": "NUMBER",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "*",
    "clojureCode": "",
    "group": "NUMBER",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "/",
    "clojureCode": "",
    "group": "NUMBER",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "map-years-to-header",
    "clojureCode": "(defn map-years-to-header \"Renames year columns with correspondent values from the first row\" [ds] (rename-columns ds (zipmap [:year1 :year2 :year3 :year4 :year5 :year6 :year7] ((juxt :year1 :year2 :year3 :year4 :year5 :year6 :year7) (first (->(read-dataset ds)(take-rows 1)(:rows)))))))\n",
    "group": "UTILITY",
    "docstring": "Renames year columns with correspondent values from the first row",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "digit-filter",
    "clojureCode": "(defn digit-filter \"\" [val] (Character/isDigit val))",
    "group": "UTILITY",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "extract-dig-min",
    "clojureCode": "(defn extract-dig-min \"\" [val] (apply str (filter digit-filter (str (first (clojure.string/split val #\"-\"))))))",
    "group": "UTILITY",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "string-filter",
    "clojureCode": "(defn string-filter  \"\" [val] (Character/isLetter val))",
    "group": "UTILITY",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "extract-descr",
    "clojureCode": "(defn extract-descr \"\" [val] (apply str (filter string-filter (str val))))",
    "group": "UTILITY",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "extract-dig-max",
    "clojureCode": "(defn extract-dig-max \"\" [val] (apply str (filter digit-filter (str (if (empty? (second (clojure.string/split val #\"-\"))) (first (clojure.string/split val #\"-\")) (second (clojure.string/split val #\"-\")) ) ))))",
    "group": "UTILITY",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "transform-genders",
    "clojureCode": "(def transform-genders {\"Females\" (s \"female\") \"Males\" (s \"male\")})",
    "group": "UTILITY",
    "docstring": "Females",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "make-unique-label",
    "clojureCode": "(defn make-unique-label [loc age1 age2 ind1 ind2 year gender] (let [[first-ch & rest-ch] gender] (str loc age1 age2 ind1 ind2 year first-ch)))",
    "group": "UTILITY",
    "docstring": "",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "get-comparator",
    "clojureCode": "(defn get-comparator [sorttype] (let [f (cond(= sorttype :ascalpha)       (fn [a b] (compare (str a) (str b))) (= sorttype :descalpha)      (fn [a b] (compare (str b) (str a))) (= sorttype :ascnum)         (fn [a b] (<  (Double/parseDouble (str a))  (Double/parseDouble (str b)))) (= sorttype :descnum)        (fn [a b] (<  (Double/parseDouble (str b))  (Double/parseDouble (str a)))) (= sorttype :asclen)         (fn [a b] (<  (count (str a))  (count (str b)))) (= sorttype :desclen)        (fn [a b] (<  (count (str b))  (count (str a)))) (= sorttype :ascdate)        (fn [a b] (compare (.parse (java.text.SimpleDateFormat. \"dd.MM.yyyy\") (str a)) (.parse (java.text.SimpleDateFormat. \"dd.MM.yyyy\") (str b)))) (= sorttype :descdate)       (fn [a b] (compare (.parse (java.text.SimpleDateFormat. \"dd.MM.yyyy\") (str b)) (.parse (java.text.SimpleDateFormat. \"dd.MM.yyyy\") (str a)))) :else  (fn [a b] (compare a b)))]f ))",
    "group": "SERVICE",
    "docstring": "Used by sort-dataset",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "MIN",
    "clojureCode": "(defn MIN [& args] (apply min (map (fn [arg] ( Double/parseDouble (str arg))) args)))",
    "group": "SERVICE",
    "docstring": "Aggregation function for use with group-rows",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "MAX",
    "clojureCode": "(defn MAX [& args] (apply max (map (fn [arg] ( Double/parseDouble (str arg))) args)))",
    "group": "SERVICE",
    "docstring": "Aggregation function for use with group-rows",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "SUM",
    "clojureCode": "(defn SUM [& args] (apply + (map (fn [arg] (Double/parseDouble (str arg))) args)))",
    "group": "SERVICE",
    "docstring": "Aggregation function for use with group-rows",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "COUNT",
    "clojureCode": "(defn COUNT [& args] (count (into [] args)))",
    "group": "SERVICE",
    "docstring": "Aggregation function for use with group-rows",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "AVG",
    "clojureCode": "(defn AVG [& args] (/ (apply SUM args) (apply COUNT args)))",
    "group": "SERVICE",
    "docstring": "Aggregation function for use with group-rows",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "group-rows",
    "clojureCode": "(defn group-rows [dataset colnames colnames-functions](let [ds-rows (:rows dataset) grouped-rows   (for [m (group-by (fn [k] (select-keys k colnames)) ds-rows)] (into {} (for [groupvar (key m)] (assoc (into {} (for [keyval colnames-functions] (let [newcolname  (keyword (str (name (key (first keyval))) \"_\" ( case (str (first (re-find (read-string \"#\\\"(?<=\\\\\\\\$)(.*?)(?=\\\\\\\\@)\\\"\") (str (val (first keyval)))))) (\"MAX\" \"MIN\" \"SUM\" \"AVG\" \"COUNT\") (first (re-find (read-string \"#\\\"(?<=\\\\\\\\$)(.*?)(?=\\\\\\\\@)\\\"\") (str (val (first keyval))))) \"MERGED\")  ))](if (and (re-find (read-string \"#\\\"COUNT+\\\"\") (str (val (first keyval))) )  (= (count  (map (fn [k] (hash-map newcolname (get [k] (key (first keyval))))) (val m))) 1))  (hash-map newcolname 1)  (case  (str (first (re-find (read-string \"#\\\"(?<=\\\\\\\\$)(.*?)(?=\\\\\\\\@)\\\"\") (str (val (first keyval))))))  (\"MAX\" \"MIN\" \"SUM\" \"AVG\" \"COUNT\" )  (apply merge-with  (val (first keyval)) (map (fn [k] (hash-map newcolname (get k (key (first keyval))))) (val m))) (apply merge-with  (fn [& args] (clojure.string/join (str (val (first keyval))) (distinct (into [] args)))) (map (fn [k] (hash-map newcolname (get k (key (first keyval))))) (val m))))))))  (key groupvar) (val groupvar))))) new-colnames (concat colnames (for [keyval colnames-functions] (keyword (str (name (key (first keyval))) \"_\" (case (first (re-find (read-string \"#\\\"(?<=\\\\\\\\$)(.*?)(?=\\\\\\\\@)\\\"\") (str (val (first keyval))))) (\"MAX\" \"MIN\" \"SUM\" \"AVG\" \"COUNT\") (first (re-find (read-string \"#\\\"(?<=\\\\\\\\$)(.*?)(?=\\\\\\\\@)\\\"\") (str (val (first keyval))))) \"MERGED\") ))))](-> (make-dataset grouped-rows new-colnames)(with-meta (meta dataset)))))",
    "group": "SERVICE",
    "docstring": "Groups rows in a dataset",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "split-column",
    "clojureCode": "(defn split-column [dataset colname separator]   (let [ col-pos (.indexOf (column-names dataset) colname) [colon & columnname] (str colname) new-rows   (->> dataset :rows (map (fn [row] (let [value-in-row (get row colname) new-col-vals (clojure.string/split value-in-row separator) index-last (- (count new-col-vals) 1)] (loop [i 0 rowmap row] (if (> i index-last) rowmap (recur (inc i) (assoc rowmap (keyword (str (apply str columnname) \"_splitted_\" (str i)))  (get new-col-vals i))))))))) new-columns   (set (apply concat (->> dataset :rows (map (fn [row] (let [value-in-row (get row colname) new-col-vals (clojure.string/split value-in-row separator) index-last (- (count new-col-vals) 1)] (loop [i 0 newcols #{}] (if (> i index-last) newcols (recur (inc i)(conj newcols (keyword (str (apply str columnname) \"_splitted_\" (str i))) ))))))))))] ( -> (make-dataset new-rows (concat (subvec (column-names dataset) 0 col-pos) (sort new-columns)(subvec (column-names dataset) (+ col-pos 1))))  (with-meta (meta dataset)))))",
    "group": "SERVICE",
    "docstring": "Splits a column based on the specified separator",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "shift-column",
    "clojureCode": "(defn shift-column  ([dataset column] (let [data (:rows dataset) header (column-names dataset) colname (if (keyword? column) column (get (column-names dataset) column))]  (-> (make-dataset data (conj (into [] (remove #{colname} header )) colname))  (with-meta (meta dataset))))) ([dataset column position-to]  (let [data (:rows dataset)  header (column-names dataset)   colname (if (keyword? column) column (get (column-names dataset) column))  position-from (.indexOf header colname)  last-pos (- (count header) 1)]  (-> (make-dataset data (into []   (cond (>= position-to last-pos)(shift-column colname)                (< position-from position-to)  (concat (subvec header 0 position-from)  (subvec header (+ position-from 1) (+ position-to 1))   [colname]  (subvec header (+ position-to 1)))                         (>= position-from last-pos) (concat (subvec header 0 position-to) [colname] (subvec header  position-to last-pos))                                    :else ( concat (subvec header 0 position-to) [colname]  (subvec header position-to position-from)  (subvec header (+ position-from 1)))  )  )                           )  (with-meta (meta dataset))))) ) ",
    "group": "SERVICE",
    "docstring": "Shift column",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "add-row",
    "clojureCode": "(defn add-row  ( [dataset [& values]] (-> (make-dataset (:rows (incanter.core/conj-rows dataset values)) (column-names dataset))(with-meta (meta dataset)))) ( [dataset position [& values]] ( if (or (< position 0) (>= position (count (:rows dataset)))) (add-row dataset [values])  (-> (make-dataset (:rows (incanter.core/conj-rows (take-rows dataset position ) values (rows dataset (range position (count (:rows dataset)))) )) (column-names dataset)) (with-meta (meta dataset))  ))) )",
    "group": "SERVICE",
    "docstring": "Adds new row to a dataset",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "remove-duplicates",
    "clojureCode": "(defn remove-duplicates([dataset] (-> (make-dataset (distinct (:rows dataset)) (column-names dataset)) (with-meta (meta dataset))))([dataset colnames](let [ ds-rows (:rows dataset)grouped-rows   (for [m (group-by (fn [k] (select-keys k colnames)) ds-rows)](into {} (for [groupvar (key m)](assoc (apply merge-with (fn [& args] (first (into [] args)))(map (fn [k] (dissoc k (key groupvar))) (val m)))(key groupvar) (val groupvar)))))] (-> (make-dataset grouped-rows (column-names dataset)) (with-meta (meta dataset))))))",
    "group": "SERVICE",
    "docstring": "Removes duplicates from a dataset",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "shift-row",
    "clojureCode": "(defn shift-row( [dataset position-from]( -> (make-dataset (:rows (incanter.core/conj-rows (take-rows dataset position-from)(rows dataset (range (+ position-from 1) (count (:rows dataset))))(rows dataset [position-from])))(column-names dataset))(with-meta (meta dataset))))( [dataset position-from position-to] (let [f (+ position-from 1)t (+ position-to 1)eods (count (:rows dataset)) ](-> (make-dataset (cond (< position-from position-to) (:rows (incanter.core/conj-rows (take-rows dataset position-from)(rows dataset (range f t))(rows dataset [position-from])(rows dataset (range t eods)))):else (:rows (incanter.core/conj-rows (take-rows dataset position-to)(rows dataset [position-from])(rows dataset (range position-to position-from))(rows dataset (range f eods)))))(column-names dataset))(with-meta (meta dataset))))))",
    "group": "SERVICE",
    "docstring": "Shifts row in a dataset",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "is-numeric",
    "clojureCode": "(defn is-numeric [x] (not (nil? (re-matches #\"[0-9.-]+\" (str x)))))",
    "group": "SERVICE",
    "docstring": "Used by convert-literal",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "true-value",
    "clojureCode": "(defn true-value? [x]  (if (or (= (clojure.string/trim (clojure.string/lower-case (str x))) \"false\")  (and (re-matches #\"[0-9.]+\" (str x)) (= (str x) \"0\")) ) false true))",
    "group": "SERVICE",
    "docstring": "Used by convert-literal",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "check-datatype",
    "clojureCode": "(defn check-datatype [dtype a]  (case dtype \"byte\"  (and  (is-numeric a) (< (Double/parseDouble (str a)) 128) (> (Double/parseDouble (str a)) -129)) \"short\" (and  (is-numeric a) (< (Double/parseDouble (str a)) 32768) (> (Double/parseDouble (str a)) -32769)) \"double\" (is-numeric a) \"decimal\" (is-numeric a) \"integer\" (and (not (nil? (re-matches #\"[0-9-]+\" (str a)))) (< (Long/parseLong (str a)) (Long/parseLong \"2147483648\")) (> (Long/parseLong (str a)) (Long/parseLong \"-2147483649\"))) \"long\" (and (not (nil? (re-matches #\"[0-9-]+\" (str a)))) (< (Double/parseDouble (str a)) (Long/parseLong \"9223372036854775808\")) (> (Long/parseLong (str a)) (Long/parseLong \"-9223372036854775809\"))) \"float\" (is-numeric a) nil))",
    "group": "SERVICE",
    "docstring": "Used by convert-literal",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "parce-date-eu",
    "clojureCode": "(defn parse-date-eu [d] (.toDate (clj-time.format/parse (clj-time.format/formatter (clj-time.core/default-time-zone) \"dd/MM/yyyy\"   \"dd-MM-yyyy\" \"dd.MM.yyyy\" ) d)))",
    "group": "SERVICE",
    "docstring": "Used by convert-literal",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "parce-date-us",
    "clojureCode": "(defn parse-date-us [d] (.toDate (clj-time.format/parse (clj-time.format/formatter (clj-time.core/default-time-zone) \"MM/dd/yyyy\"   \"MM-dd-yyyy\" \"MM.dd.yyyy\" \"yyyy-MM-dd\" \"yyyy.MM.dd\" \"yyyy/MM/dd\") d)))",
    "group": "SERVICE",
    "docstring": "Used by convert-literal",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "date-validator",
    "clojureCode": "(defn date-validator [d] ( if (re-matches #\"(?:(?:31(\\\\\\\\/|-|\\\\\\\\.)(?:0?[13578]|1[02]))\\\\\\\\1|(?:(?:29|30)(\\\\\\\\/|-|\\\\\\\\.)(?:0?[1,3-9]|1[0-2])\\\\\\\\2))(?:(?:1[6-9]|[2-9]\\\\\\\\d)?\\\\\\\\d{2})$|^(?:29(\\\\\\\\/|-|\\\\\\\\.)0?2\\\\\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\\\\\\d|2[0-8])(\\\\\\\\/|-|\\\\\\\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\\\\\\\4(?:(?:1[6-9]|[2-9]\\\\\\\\d)?\\\\\\\\d{2})$\" d) \"eu\"  (if (re-matches #\"(?:(?:(?:0?[13578]|1[02])(\\\\\\\\/|-|\\\\\\\\.)31)\\\\\\\\1|(?:(?:0?[1,3-9]|1[0-2])(\\\\\\\\/|-|\\\\\\\\.)(?:29|30)\\\\\\\\2))(?:(?:1[6-9]|[2-9]\\\\\\\\d)?\\\\\\\\d{2})$|^(?:0?2(\\\\\\\\/|-|\\\\\\\\.)29\\\\\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:(?:0?[1-9])|(?:1[0-2]))(\\\\\\\\/|-|\\\\\\\\.)(?:0?[1-9]|1\\\\\\\\d|2[0-8])\\\\\\\\4(?:(?:1[6-9]|[2-9]\\\\\\\\d)?\\\\\\\\d{2})$\" d) \"us\"  (if (re-matches #\"(19|20)\\\\\\\\d\\\\\\\\d[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$\" d) \"us\" nil))))",
    "group": "SERVICE",
    "docstring": "Used by convert-literal",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "convert-numeric-literal",
    "clojureCode": "(defn convert-numeric-literal [arg dtype on-empty on-error] (let[f (case dtype \"byte\" (fn [a](byte a)) \"short\" (fn [a](short a)) \"double\" (fn [a](double a)) \"decimal\" (fn [a](bigdec a)) \"integer\" (fn [a](int a)) \"long\" (fn [a](long a)) \"float\" (fn [a](float a)) nil) ] (cond (empty? arg) (if (not (check-datatype dtype on-empty)) (f 0) (f (Double/parseDouble (str on-empty))))(not (check-datatype dtype arg)) (if (not (check-datatype dtype on-error)) (f 0) (f (Double/parseDouble (str on-error))))(not (check-datatype dtype arg)) (if (not (check-datatype dtype on-error)) (f 0) (f (Double/parseDouble (str on-error)))):else (f (Double/parseDouble arg))))) ",
    "group": "SERVICE",
    "docstring": "Used by convert-literal",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "convert-literal",
    "clojureCode": "(defn convert-literal[x dtype  &{:keys [on-empty on-error lang-tag] :or {on-error false on-empty 0 lang-tag nil}}]  (let [ default-date (parse-date-eu \"31.12.2099\") arg (str x) on-empty-s (if (= on-empty 0) \"Unknown\" on-empty)] (case dtype (\"byte\" \"float\" \"short\" \"double\" \"decimal\" \"integer\" \"long\") (convert-numeric-literal arg dtype on-empty on-error)\"boolean\" (if (or (nil? x) (empty? (str x))) (true-value? on-empty) (true-value? arg)) \"date\" (if (or (nil? x) (empty? (str x))) (if (date-validator (str on-empty)) (convert-literal on-empty \"date\") default-date) (case (date-validator arg) \"eu\" (parse-date-eu arg) \"us\" (parse-date-us arg) (if (date-validator (str on-error)) (convert-literal on-error \"date\") default-date) ))  (if (or (nil? x) (empty? (str x))) (if (nil? lang-tag) (s (str on-empty-s)) (s (str on-empty-s) lang-tag) ) (if (nil? lang-tag) (s x) (s x lang-tag)))))) ",
    "group": "CONVERT DATATYPE",
    "docstring": "Coerce argument to specified datatype",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "join-with",
    "clojureCode": "(defn join-with [sep] ( fn [& strings] (clojure.string/join sep strings)))",
    "group": "STRING",
    "docstring": "Returns a string of all elements in the collection separated by custom separator.",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "str",
    "clojureCode": "",
    "group": "STRING",
    "docstring": "With one arg x, returns x.toString(). (str nil) returns the empty string. With more than one arg, returns the concatenation of the str values of the args.",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "get-lat-long-strings-replacement",
    "clojureCode": "(defn get-lat-long-strings-replacement [easting northing hemisphere zoneNumber] (let [utmCoords (. gov.nasa.worldwind.geom.coords.UTMCoord fromUTM (Integer/parseInt zoneNumber) (if (= hemisphere \"N\") \"gov.nasa.worldwind.avkey.North\" (if (= hemisphere \"S\") \"gov.nasa.worldwind.avkey.East\" (throw (Exception. \"Wrong hemisphere input\")))) (Double/parseDouble easting) (Double/parseDouble northing))] (vector (re-pattern easting) (str (.getDegrees (.getLongitude utmCoords))) (re-pattern northing) (str (.getDegrees (.getLatitude utmCoords))))))",
    "group": "SERVICE",
    "docstring": "Produces a pair of replacement coordinates for the given easting, northing, hemisphere letter and zone number",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "replace-several",
    "clojureCode": "(defn replace-several [content replacements] (let [replacement-list (partition 2 replacements)] (reduce (fn [arg1 arg2] (apply clojure.string/replace arg1 arg2)) content replacement-list)))",
    "group": "SERVICE",
    "docstring": "Replace several strings in another string based on a map of replacement pairs (used with \"get-lat-long-strings-replacement\" results to convert coordinates)",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "convert-col-lat-long",
    "clojureCode": "(defn convert-col-lat-long [col hemisphere zoneNumber] (let [all-coords (re-seq (re-pattern \"-?[0-9]{1,13}.[0-9]+\") col)] (replace-several col (flatten (map (fn [coord-pair] (get-lat-long-strings-replacement (nth coord-pair 0) (nth coord-pair 1) hemisphere zoneNumber)) (partition 2 all-coords))))))",
    "group": "SERVICE",
    "docstring": "Convert coordinate pairs in a given cell by input hemisphere string (\"N\" or \"S\") and zone number (e.g., 32)",
    "__type": "CustomFunctionDeclaration"
  }, {
    "name": "not-empty?",
    "clojureCode": "(def not-empty? (complement empty?))",
    "group": "PREDICATE",
    "docstring": "Returns true if given collection has at least 1 item",
    "__type": "CustomFunctionDeclaration"
  }],
  "prefixers": [],
  "pipelines": [{
    "functions": [{
      "isPreviewed": false,
      "indexFrom": 0,
      "indexTo": 2,
      "name": "drop-rows",
      "displayName": "drop-rows",
      "docstring": "Drop 2 first row(s)",
      "take": false,
      "__type": "DropRowsFunction",
      "$$hashKey": "object:246"
    }, {
      "name": "make-dataset",
      "displayName": "make-dataset",
      "isPreviewed": false,
      "columnsArray": [{
        "id": 0,
        "value": "county"
      }, {
        "id": 1,
        "value": "industry"
      }, {
        "id": 2,
        "value": "gender"
      }, {
        "id": 3,
        "value": "age"
      }, {
        "id": 4,
        "value": "year1"
      }, {
        "id": 5,
        "value": "year2"
      }, {
        "id": 6,
        "value": "year3"
      }, {
        "id": 7,
        "value": "year4"
      }, {
        "id": 8,
        "value": "year5"
      }, {
        "id": 9,
        "value": "year6"
      }, {
        "id": 10,
        "value": "year7"
      }],
      "useLazy": null,
      "moveFirstRowToHeader": null,
      "__type": "MakeDatasetFunction",
      "docstring": "Make dataset",
      "$$hashKey": "object:247",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "functionName": {
        "name": "map-years-to-header",
        "clojureCode": "(defn map-years-to-header \"Renames year columns with correspondent values from the first row\" [ds] (rename-columns ds (zipmap [:year1 :year2 :year3 :year4 :year5 :year6 :year7] ((juxt :year1 :year2 :year3 :year4 :year5 :year6 :year7) (first (->(read-dataset ds)(take-rows 1)(:rows)))))))\n",
        "group": "UTILITY",
        "docstring": "Renames year columns with correspondent values from the first row",
        "__type": "CustomFunctionDeclaration"
      },
      "docstring": "Apply map-years-to-header to dataset",
      "name": "utility",
      "displayName": "map-years-to-header",
      "__type": "UtilityFunction",
      "$$hashKey": "object:248",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "indexFrom": 0,
      "indexTo": 1,
      "name": "drop-rows",
      "displayName": "drop-rows",
      "docstring": "Drop 1 first row(s)",
      "take": false,
      "__type": "DropRowsFunction",
      "$$hashKey": "object:249",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "name": "mapc",
      "displayName": "mapc",
      "docstring": "Map columns",
      "keyFunctionPairs": [{
        "key": {
          "id": 0,
          "value": "county"
        },
        "func": {
          "id": 0,
          "name": "fill-when",
          "group": "SERVICE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }, {
        "key": {
          "id": 0,
          "value": "industry"
        },
        "func": {
          "id": 0,
          "name": "fill-when",
          "group": "SERVICE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }, {
        "key": {
          "id": 0,
          "value": "gender"
        },
        "func": {
          "id": 0,
          "name": "fill-when",
          "group": "SERVICE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }],
      "__type": "MapcFunction",
      "$$hashKey": "object:250",
      "fabIsOpen": false
    }, {
      "name": "melt",
      "displayName": "melt",
      "isPreviewed": false,
      "columnsArray": [{
        "id": 0,
        "value": "county"
      }, {
        "id": 1,
        "value": "industry"
      }, {
        "id": 2,
        "value": "gender"
      }, {
        "id": 3,
        "value": "age"
      }],
      "variable": null,
      "value": null,
      "aggrFunction": null,
      "separator": null,
      "__type": "MeltFunction",
      "docstring": "Reshape dataset on columns:  county industry gender age",
      "$$hashKey": "object:251",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "name": "add-columns",
      "displayName": "add-columns",
      "columnsArray": [{
        "colName": "id",
        "colValue": "",
        "specValue": "Row number",
        "expression": null,
        "__type": "NewColumnSpec"
      }],
      "docstring": "Add new column",
      "__type": "AddColumnsFunction",
      "$$hashKey": "object:252",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "newColName": "county-code",
      "colsToDeriveFrom": [{
        "id": 0,
        "value": "county"
      }],
      "name": "derive-column",
      "displayName": "derive-column",
      "functionsToDeriveWith": [{
        "funct": {
          "id": 0,
          "name": "extract-dig-min",
          "group": "UTILITY"
        },
        "functParams": [],
        "__type": "FunctionWithArgs"
      }],
      "__type": "DeriveColumnFunction",
      "docstring": "Derive column county-code from column(s) county ",
      "$$hashKey": "object:253"
    }, {
      "isPreviewed": false,
      "newColName": "county-label",
      "colsToDeriveFrom": [{
        "id": 0,
        "value": "county"
      }],
      "name": "derive-column",
      "displayName": "derive-column",
      "functionsToDeriveWith": [{
        "funct": {
          "id": 0,
          "name": "extract-descr",
          "group": "UTILITY"
        },
        "functParams": [],
        "__type": "FunctionWithArgs"
      }],
      "__type": "DeriveColumnFunction",
      "docstring": "Derive column county-label from column(s) county ",
      "$$hashKey": "object:254",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "newColName": "age-min",
      "colsToDeriveFrom": [{
        "id": 0,
        "value": "age"
      }],
      "name": "derive-column",
      "displayName": "derive-column",
      "functionsToDeriveWith": [{
        "funct": {
          "id": 0,
          "name": "extract-dig-min",
          "group": "UTILITY"
        },
        "functParams": [],
        "__type": "FunctionWithArgs"
      }],
      "__type": "DeriveColumnFunction",
      "docstring": "Derive column age-min from column(s) age ",
      "$$hashKey": "object:255",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "newColName": "age-max",
      "colsToDeriveFrom": [{
        "id": 0,
        "value": "age"
      }],
      "name": "derive-column",
      "displayName": "derive-column",
      "functionsToDeriveWith": [{
        "funct": {
          "id": 0,
          "name": "extract-dig-max",
          "group": "UTILITY"
        },
        "functParams": [],
        "__type": "FunctionWithArgs"
      }],
      "__type": "DeriveColumnFunction",
      "docstring": "Derive column age-max from column(s) age ",
      "$$hashKey": "object:256",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "newColName": "ind-min",
      "colsToDeriveFrom": [{
        "id": 0,
        "value": "industry"
      }],
      "name": "derive-column",
      "displayName": "derive-column",
      "functionsToDeriveWith": [{
        "funct": {
          "id": 0,
          "name": "extract-dig-min",
          "group": "UTILITY"
        },
        "functParams": [],
        "__type": "FunctionWithArgs"
      }],
      "__type": "DeriveColumnFunction",
      "docstring": "Derive column ind-min from column(s) industry ",
      "$$hashKey": "object:257",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "newColName": "ind-max",
      "colsToDeriveFrom": [{
        "id": 0,
        "value": "industry"
      }],
      "name": "derive-column",
      "displayName": "derive-column",
      "functionsToDeriveWith": [{
        "funct": {
          "id": 0,
          "name": "extract-dig-max",
          "group": "UTILITY"
        },
        "functParams": [],
        "__type": "FunctionWithArgs"
      }],
      "__type": "DeriveColumnFunction",
      "docstring": "Derive column ind-max from column(s) industry ",
      "$$hashKey": "object:258",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "newColName": "label",
      "colsToDeriveFrom": [{
        "id": 0,
        "value": "county-code"
      }, {
        "id": 1,
        "value": "age-min"
      }, {
        "id": 2,
        "value": "age-max"
      }, {
        "id": 3,
        "value": "ind-min"
      }, {
        "id": 4,
        "value": "ind-max"
      }, {
        "id": 5,
        "value": "variable"
      }, {
        "id": 6,
        "value": "gender"
      }],
      "name": "derive-column",
      "displayName": "derive-column",
      "functionsToDeriveWith": [{
        "funct": {
          "id": 0,
          "name": "make-unique-label",
          "group": "UTILITY"
        },
        "functParams": [],
        "__type": "FunctionWithArgs"
      }],
      "__type": "DeriveColumnFunction",
      "docstring": "Derive column label from column(s) county-code age-min age-max ind-min ind-max variable gender ",
      "$$hashKey": "object:259",
      "fabIsOpen": false
    }, {
      "isPreviewed": false,
      "name": "mapc",
      "displayName": "mapc",
      "docstring": "Map columns",
      "keyFunctionPairs": [{
        "key": {
          "id": 0,
          "value": "gender"
        },
        "func": {
          "id": 0,
          "name": "transform-genders",
          "group": "UTILITY"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }, {
        "key": {
          "id": 0,
          "value": "value"
        },
        "func": {
          "id": 0,
          "name": "integer-literal",
          "group": "CONVERT DATATYPE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }, {
        "key": {
          "id": 0,
          "value": "county-code"
        },
        "func": {
          "id": 0,
          "name": "integer-literal",
          "group": "CONVERT DATATYPE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }, {
        "key": {
          "id": 0,
          "value": "county-label"
        },
        "func": {
          "id": 0,
          "name": "string-literal",
          "group": "CONVERT DATATYPE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }, {
        "key": {
          "id": 0,
          "value": "age-min"
        },
        "func": {
          "id": 0,
          "name": "integer-literal",
          "group": "CONVERT DATATYPE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }, {
        "key": {
          "id": 0,
          "value": "age-max"
        },
        "func": {
          "id": 0,
          "name": "integer-literal",
          "group": "CONVERT DATATYPE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }, {
        "key": {
          "id": 0,
          "value": "industry"
        },
        "func": {
          "id": 0,
          "name": "string-literal",
          "group": "CONVERT DATATYPE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }, {
        "key": {
          "id": 0,
          "value": "variable"
        },
        "func": {
          "id": 0,
          "name": "integer-literal",
          "group": "CONVERT DATATYPE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }, {
        "key": {
          "id": 0,
          "value": "label"
        },
        "func": {
          "id": 0,
          "name": "string-literal",
          "group": "CONVERT DATATYPE"
        },
        "funcParams": [],
        "__type": "KeyFunctionPair"
      }],
      "__type": "MapcFunction",
      "$$hashKey": "object:260",
      "fabIsOpen": false
    }],
    "__type": "Pipeline"
  }],
  "graphs": [{
    "graphURI": "http://www.example.no/#/",
    "graphRoots": [{
      "subElements": [{
        "subElements": [{
          "subElements": [],
          "literalValue": {
            "id": 0,
            "value": "value"
          },
          "datatype": {
            "id": 0,
            "name": "unspecified"
          },
          "onEmpty": null,
          "onError": null,
          "langTag": null,
          "datatypeURI": null,
          "nodeCondition": [],
          "__type": "ColumnLiteral"
        }],
        "prefix": "base-prefix",
        "propertyName": "Number",
        "propertyCondition": [],
        "__type": "Property"
      }, {
        "subElements": [{
          "subElements": [],
          "literalValue": {
            "id": 0,
            "value": "industry"
          },
          "datatype": {
            "id": 0,
            "name": "unspecified"
          },
          "onEmpty": null,
          "onError": null,
          "langTag": null,
          "datatypeURI": null,
          "nodeCondition": [],
          "__type": "ColumnLiteral"
        }],
        "prefix": "base-prefix",
        "propertyName": "involvedIn",
        "propertyCondition": [],
        "__type": "Property"
      }, {
        "subElements": [{
          "subElements": [],
          "literalValue": {
            "id": 0,
            "value": "age-min"
          },
          "datatype": {
            "id": 0,
            "name": "unspecified"
          },
          "onEmpty": null,
          "onError": null,
          "langTag": null,
          "datatypeURI": null,
          "nodeCondition": [],
          "__type": "ColumnLiteral"
        }],
        "prefix": "base-age",
        "propertyName": "min",
        "propertyCondition": [],
        "__type": "Property"
      }, {
        "subElements": [{
          "subElements": [],
          "literalValue": {
            "id": 0,
            "value": "age-max"
          },
          "datatype": {
            "id": 0,
            "name": "unspecified"
          },
          "onEmpty": null,
          "onError": null,
          "langTag": null,
          "datatypeURI": null,
          "nodeCondition": [],
          "__type": "ColumnLiteral"
        }],
        "prefix": "base-age",
        "propertyName": "max",
        "propertyCondition": [],
        "__type": "Property"
      }, {
        "subElements": [{
          "subElements": [],
          "literalValue": {
            "id": 0,
            "value": "variable"
          },
          "datatype": {
            "id": 0,
            "name": "unspecified"
          },
          "onEmpty": null,
          "onError": null,
          "langTag": null,
          "datatypeURI": null,
          "nodeCondition": [],
          "__type": "ColumnLiteral"
        }],
        "prefix": "dbpedia-owl",
        "propertyName": "Year",
        "propertyCondition": [],
        "__type": "Property"
      }, {
        "subElements": [{
          "subElements": [],
          "literalValue": {
            "id": 0,
            "value": "gender"
          },
          "datatype": {
            "id": 0,
            "name": "unspecified"
          },
          "onEmpty": null,
          "onError": null,
          "langTag": null,
          "datatypeURI": null,
          "nodeCondition": [],
          "__type": "ColumnLiteral"
        }],
        "prefix": "dbpedia-owl",
        "propertyName": "gender",
        "propertyCondition": [],
        "__type": "Property"
      }, {
        "subElements": [{
          "subElements": [],
          "literalValue": {
            "id": 0,
            "value": "county-label"
          },
          "datatype": {
            "id": 0,
            "name": "unspecified"
          },
          "onEmpty": null,
          "onError": null,
          "langTag": null,
          "datatypeURI": null,
          "nodeCondition": [],
          "__type": "ColumnLiteral"
        }],
        "prefix": "base-prefix",
        "propertyName": "location",
        "propertyCondition": [],
        "__type": "Property"
      }],
      "prefix": "base-measure",
      "column": {
        "id": 0,
        "value": "label"
      },
      "nodeCondition": [],
      "__type": "ColumnURI"
    }],
    "__type": "Graph"
  }],
  "rdfVocabs": [{
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dbpedia-resource",
    "namespace": "http://dbpedia.org/resource/",
    "fromServer": false
  }, {
    "name": "base-age",
    "namespace": "http://example.no/claylab/employed_persons/Age/",
    "fromServer": false
  }, {
    "name": "dbpedia-owl",
    "namespace": "http://dbpedia.org/ontology/",
    "fromServer": false
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "base-prefix",
    "namespace": "http://www.example.no/claylab/",
    "fromServer": false
  }, {
    "name": "base-measure",
    "namespace": "http://www.example.no/claylab/employed-persons/Measure#",
    "fromServer": false
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "sioc",
    "classes": [],
    "namespace": "http://rdfs.org/sioc/ns",
    "fromServer": true,
    "properties": []
  }, {
    "name": "dc",
    "classes": [],
    "namespace": "http://purl.org/dc/terms/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "foaf",
    "classes": [],
    "namespace": "http://xmlns.com/foaf/0.1/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "prov",
    "classes": [],
    "namespace": "http://www.w3.org/ns/prov#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "time",
    "classes": [],
    "namespace": "http://www.w3.org/2006/time",
    "fromServer": true,
    "properties": []
  }, {
    "name": "bibo",
    "classes": [],
    "namespace": "http://purl.org/ontology/bibo/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdf",
    "classes": [],
    "namespace": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rss",
    "classes": [],
    "namespace": "http://purl.org/rss/1.0/",
    "fromServer": true,
    "properties": []
  }, {
    "name": "geo",
    "classes": [],
    "namespace": "http://www.w3.org/2003/01/geo/wgs84_pos#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "frbr",
    "classes": [],
    "namespace": "http://purl.org/vocab/frbr/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "rdfs",
    "classes": [],
    "namespace": "http://www.w3.org/2000/01/rdf-schema#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "skos",
    "classes": [],
    "namespace": "http://www.w3.org/2004/02/skos/core#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "org",
    "classes": [],
    "namespace": "http://www.w3.org/ns/org#",
    "fromServer": true,
    "properties": []
  }, {
    "name": "owl",
    "classes": [],
    "namespace": "http://www.w3.org/2002/07/owl#",
    "fromServer": true,
    "properties": []
  }],
  "__type": "Transformation"
}
